# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\res\WibuReader.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_WibuReader(object):
    def setupUi(self, WibuReader):
        WibuReader.setObjectName("WibuReader")
        WibuReader.resize(800, 600)
        WibuReader.setToolButtonStyle(QtCore.Qt.ToolButtonIconOnly)
        WibuReader.setAnimated(True)
        WibuReader.setDocumentMode(False)
        WibuReader.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.centralwidget = QtWidgets.QWidget(WibuReader)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setObjectName("label")
        self.horizontalLayout.addWidget(self.label)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem)
        self.comboBox = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox.setMinimumSize(QtCore.QSize(160, 16))
        self.comboBox.setObjectName("comboBox")
        self.horizontalLayout.addWidget(self.comboBox)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setDocumentMode(True)
        self.tabWidget.setTabsClosable(True)
        self.tabWidget.setMovable(True)
        self.tabWidget.setObjectName("tabWidget")
        self.verticalLayout.addWidget(self.tabWidget)
        WibuReader.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(WibuReader)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 23))
        self.menubar.setObjectName("menubar")
        self.menu_file = QtWidgets.QMenu(self.menubar)
        self.menu_file.setObjectName("menu_file")
        self.menu = QtWidgets.QMenu(self.menu_file)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/icon/Save.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menu.setIcon(icon)
        self.menu.setObjectName("menu")
        self.menu_help = QtWidgets.QMenu(self.menubar)
        self.menu_help.setObjectName("menu_help")
        self.menu_tools = QtWidgets.QMenu(self.menubar)
        self.menu_tools.setObjectName("menu_tools")
        self.menu_setting = QtWidgets.QMenu(self.menubar)
        self.menu_setting.setObjectName("menu_setting")
        WibuReader.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(WibuReader)
        self.statusbar.setTabletTracking(False)
        self.statusbar.setObjectName("statusbar")
        WibuReader.setStatusBar(self.statusbar)
        self.toolBar = QtWidgets.QToolBar(WibuReader)
        self.toolBar.setObjectName("toolBar")
        WibuReader.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.AOpen = QtWidgets.QAction(WibuReader)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/toolbar/Open.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.AOpen.setIcon(icon1)
        self.AOpen.setObjectName("AOpen")
        self.AExit = QtWidgets.QAction(WibuReader)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/toolbar/Close.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.AExit.setIcon(icon2)
        self.AExit.setObjectName("AExit")
        self.ASaveAsBin = QtWidgets.QAction(WibuReader)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/toolbar/Save.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.ASaveAsBin.setIcon(icon3)
        self.ASaveAsBin.setObjectName("ASaveAsBin")
        self.ASaveAsXml = QtWidgets.QAction(WibuReader)
        self.ASaveAsXml.setIcon(icon3)
        self.ASaveAsXml.setObjectName("ASaveAsXml")
        self.ASave = QtWidgets.QAction(WibuReader)
        self.ASave.setIcon(icon3)
        self.ASave.setObjectName("ASave")
        self.AAbout = QtWidgets.QAction(WibuReader)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/toolbar/About.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.AAbout.setIcon(icon4)
        self.AAbout.setObjectName("AAbout")
        self.AFix = QtWidgets.QAction(WibuReader)
        self.AFix.setEnabled(True)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/toolbar/CheckFix.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.AFix.setIcon(icon5)
        self.AFix.setObjectName("AFix")
        self.AClose = QtWidgets.QAction(WibuReader)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/toolbar/Break.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.AClose.setIcon(icon6)
        self.AClose.setObjectName("AClose")
        self.ACodeMeterLinPatch = QtWidgets.QAction(WibuReader)
        self.ACodeMeterLinPatch.setObjectName("ACodeMeterLinPatch")
        self.AWbcKey = QtWidgets.QAction(WibuReader)
        self.AWbcKey.setObjectName("AWbcKey")
        self.AAuthSetting = QtWidgets.QAction(WibuReader)
        self.AAuthSetting.setObjectName("AAuthSetting")
        self.AFixRau = QtWidgets.QAction(WibuReader)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/toolbar/CheckRau.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.AFixRau.setIcon(icon7)
        self.AFixRau.setObjectName("AFixRau")
        self.menu.addAction(self.ASaveAsBin)
        self.menu.addAction(self.ASaveAsXml)
        self.menu_file.addAction(self.AOpen)
        self.menu_file.addAction(self.ASave)
        self.menu_file.addAction(self.menu.menuAction())
        self.menu_file.addSeparator()
        self.menu_file.addAction(self.AClose)
        self.menu_file.addAction(self.AExit)
        self.menu_help.addAction(self.AAbout)
        self.menu_tools.addAction(self.ACodeMeterLinPatch)
        self.menu_tools.addAction(self.AWbcKey)
        self.menu_setting.addAction(self.AAuthSetting)
        self.menubar.addAction(self.menu_file.menuAction())
        self.menubar.addAction(self.menu_setting.menuAction())
        self.menubar.addAction(self.menu_tools.menuAction())
        self.menubar.addAction(self.menu_help.menuAction())
        self.toolBar.addAction(self.AOpen)
        self.toolBar.addAction(self.ASave)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.AFix)
        self.toolBar.addAction(self.AFixRau)
        self.toolBar.addAction(self.AAbout)

        self.retranslateUi(WibuReader)
        self.tabWidget.setCurrentIndex(-1)
        self.AOpen.triggered.connect(WibuReader.openFile)
        self.AAbout.triggered.connect(WibuReader.showAbout)
        self.AExit.triggered.connect(WibuReader.close)
        self.AFix.triggered.connect(WibuReader.fixFile)
        self.ASave.triggered.connect(WibuReader.saveFile)
        self.ASaveAsBin.triggered.connect(WibuReader.saveAsBinFile)
        self.ASaveAsXml.triggered.connect(WibuReader.saveAsXmlFile)
        self.comboBox.activated['int'].connect(WibuReader.comboboxSelected)
        self.tabWidget.tabCloseRequested['int'].connect(self.tabWidget.removeTab)
        self.AClose.triggered.connect(WibuReader.init)
        self.tabWidget.currentChanged['int'].connect(WibuReader.tabWidgetChanged)
        self.ACodeMeterLinPatch.triggered.connect(WibuReader.codeMeterLinPatchClick)
        self.AWbcKey.triggered.connect(WibuReader.wbcKeyClick)
        self.AAuthSetting.triggered.connect(WibuReader.authSettingClick)
        self.AFixRau.triggered.connect(WibuReader.fixRau)
        QtCore.QMetaObject.connectSlotsByName(WibuReader)

    def retranslateUi(self, WibuReader):
        _translate = QtCore.QCoreApplication.translate
        WibuReader.setWindowTitle(_translate("WibuReader", "Wibu Reader"))
        self.label.setText(_translate("WibuReader", "修改完后需要点击修复按钮进行应用"))
        self.menu_file.setTitle(_translate("WibuReader", "文件"))
        self.menu.setTitle(_translate("WibuReader", "导出"))
        self.menu_help.setTitle(_translate("WibuReader", "帮助"))
        self.menu_tools.setTitle(_translate("WibuReader", "工具"))
        self.menu_setting.setTitle(_translate("WibuReader", "设置"))
        self.toolBar.setWindowTitle(_translate("WibuReader", "toolBar"))
        self.AOpen.setText(_translate("WibuReader", "打开"))
        self.AExit.setText(_translate("WibuReader", "退出"))
        self.ASaveAsBin.setText(_translate("WibuReader", "输出二进制"))
        self.ASaveAsXml.setText(_translate("WibuReader", "输出xml"))
        self.ASave.setText(_translate("WibuReader", "保存"))
        self.AAbout.setText(_translate("WibuReader", "关于"))
        self.AFix.setText(_translate("WibuReader", "修复"))
        self.AFix.setToolTip(_translate("WibuReader", "修复"))
        self.AClose.setText(_translate("WibuReader", "关闭"))
        self.ACodeMeterLinPatch.setText(_translate("WibuReader", "CodeMeterLin补丁"))
        self.AWbcKey.setText(_translate("WibuReader", "wbc私钥"))
        self.AAuthSetting.setText(_translate("WibuReader", "授权设置"))
        self.AFixRau.setText(_translate("WibuReader", "AFixRau"))
        self.AFixRau.setToolTip(_translate("WibuReader", "修复RAU文件"))
import toolbar_rc
